var X=Object.defineProperty;var Z=(s,t,e)=>t in s?X(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var o=(s,t,e)=>(Z(s,typeof t!="symbol"?t+"":t,e),e),S=(s,t,e)=>{if(!t.has(s))throw TypeError("Cannot "+e)};var i=(s,t,e)=>(S(s,t,"read from private field"),e?e.call(s):t.get(s)),d=(s,t,e)=>{if(t.has(s))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(s):t.set(s,e)},h=(s,t,e,r)=>(S(s,t,"write to private field"),r?r.call(s,e):t.set(s,e),e);var I=(s,t,e)=>(S(s,t,"access private method"),e);import{G as tt,M as $,P as E,O as D,a4 as et,T as b,a5 as st,a6 as N,a7 as rt,a8 as it}from"./index-Dq0Qrvv2.js";function q(s){return JSON.parse(JSON.stringify(s))}function nt(){return Date.now().toString(36)+Math.random().toString(36).substring(2)}function at(s,t,e){return s.map(r=>r===t?e:r)}function vt(s,t={}){return ot(s,"UAH",t)}function ot(s,t="UAH",e={},r="uk-UA"){if(typeof s!="number")return s;const n={style:"currency",currency:t,currencyDisplay:"narrowSymbol"};return new Intl.NumberFormat(r,{...n,...e}).format(s)}function bt(s,t){return Object.assign(s,t)}function ct(s){return Array.isArray(s)?s.length===0:Object.keys(s).length===0}function ht(s,t){return s.reduce((e,r)=>parseInt(e,10)+parseInt(r[t],10),0)}const p=tt("models",{state:()=>({models:{},activeIds:{}}),getters:{getAll:s=>(t,e=!1)=>ut(s,t,e),getById:s=>(t,e)=>H(s,t,e),getByIds:s=>(t,e)=>K(s,t,e),getByLoaded:s=>t=>K(s,t,lt(s,t))},actions:{setActiveIds(s,t){L(this,s),this.activeIds[s]=t},addActiveIds(s,t){t.forEach(e=>this.addActiveId(s,e))},addActiveId(s,t){L(this,s),this.activeIds[s].push(t)},removeActiveIds(s,t){t.forEach(e=>this.removeLoadedId(s,e))},removeLoadedId(s,t){L(this,s);const e=this.activeIds.indexOf(t);delete this.activeIds[e]},setCollection(s,t){typeof this.models[s]>"u"&&(this.models[s]={}),this.models[s]=t},updateById(s,t,e){typeof this.models[s]>"u"&&(console.info(`create state model [${s}]`),this.models[s]={});const r={...this.models[s][t],...e},n={...this.models[s],[t]:r},l={...this.models,[s]:n};this.models=l},removeById(s,t){if(typeof this.models[s]>"u"){console.warn(`Not found state model [${s}]`);return}delete this.models[s][t]},reset(){this.models={}}}});function L(s,t){typeof s.activeIds[t]>"u"&&(s.activeIds[t]=[])}function lt(s,t){return s.activeIds[t]??[]}function ut(s,t,e=!1){const r=s.models[t];return e?r??{}:r?Object.values(r):[]}function K(s,t,e){return e.map(r=>H(s,t,r)).filter(r=>r)}function H(s,t,e){let r=s.models[t]??null;return r?r[e]:null}function dt(s,t,e={},r={}){for(let[n,l]of Object.entries(s)){let f=r.hasOwnProperty(n)?r[n]:t;e.hasOwnProperty(n)&&(n=e[n]),mt(f,n,l)}}function pt(s,t,e){if(ct(t))return;const r=p();switch(e){case D:r.setActiveIds(s,t);break;case E:case $:r.addActiveIds(s,t);break}}function mt(s,t,e){switch(s){case D:j(t,e);break;case E:yt(t,e);break;case $:gt(t,e);break}}function j(s,t){p().setCollection(s,t)}function yt(s,t){B(s),j(s,Object.assign({},{...B(s),...t}))}function gt(s,t){console.log("fillModels update Field");const e={...B(s)};for(const r in t){const n={...e[r]};e[r]=Object.assign(n,t[r])}j(s,e)}function B(s){return p().getAll(s,!0)}var c,_,a,y,A,w,v,R,C,M,J,P,G,Y;let ft=(Y=class{constructor(){d(this,R);d(this,M);d(this,P);d(this,c,null);d(this,_,{});d(this,a,{});d(this,y,{});d(this,A,D);d(this,w,{});d(this,v,{});this.api=new et}static make(t){const e=new this;return e.setModel(t),e}getResponse(){return i(this,a)}getMeta(){return i(this,y)}getResourceUrl(t=null){return t?i(this,c).urlResource()+t:i(this,c).urlResource()}getStorageNames(){let t={};return i(this,c)&&(t[i(this,c).includeName()]=i(this,c).storageName()),{...t,...i(this,v)}}setModel(t){return h(this,c,t),this}setUpdateMode(t){return h(this,A,t),this}setParams(t){return h(this,_,t),this}setUpdateModes(t){return h(this,w,t),this}setStorageNames(t){return h(this,v,t),this}async get(t=null){var e;return this.api.params(i(this,_)),h(this,a,await this.api.query(this.getResourceUrl(t))),h(this,y,(e=i(this,a).data)==null?void 0:e.meta),I(this,R,C).call(this,i(this,a).data,i(this,A)),i(this,a)}async create(){var r;const t=i(this,c).urlResource(),e=i(this,c).toObject();return console.log("api create resource",t,e),this.api.params(i(this,_)),h(this,a,await this.api.post(t,e)),h(this,y,(r=i(this,a).data)==null?void 0:r.meta),I(this,R,C).call(this,i(this,a).data,E),i(this,a)}async update(){const t=i(this,c).urlResource()+"/"+i(this,c).getId(),e=i(this,c).toObject();return console.log("api update resource",t,e),this.api.params(i(this,_)),h(this,a,await this.api.patch(t,e)),h(this,y,i(this,a).data.meta),I(this,R,C).call(this,i(this,a).data,E),i(this,a)}async destroy(){const t=i(this,c).urlResource()+"/"+i(this,c).getId();return console.log("api destroy resource",t),h(this,a,await this.api.delete(t)),h(this,y,i(this,a).data.meta),i(this,a)}},c=new WeakMap,_=new WeakMap,a=new WeakMap,y=new WeakMap,A=new WeakMap,w=new WeakMap,v=new WeakMap,R=new WeakSet,C=function(t,e){pt(i(this,c).storageName(),t.data,e),dt(I(this,M,J).call(this,t.included),e,this.getStorageNames(),i(this,w))},M=new WeakSet,J=function(t){for(const[e,r]of Object.entries(t))t[e]=I(this,P,G).call(this,r);return t},P=new WeakSet,G=function(t){for(const[e,r]of Object.entries(t))r.exists=!0,t[e]=r;return t},Y);class u{constructor(){o(this,"model",null);o(this,"params",{});this.params=this._getDefaultParams()}static make(t){const e=new this;return e.setModel(t),e}setModel(t){return this.model=t,this}setParams(t){return this.params={...this.params,...t},this}all(){const e=p().getAll(this._storageName());return this._handlerEntities(e)}find(t){const r=p().getById(this._storageName(),t);return r?this._handlerEntities([r])[0]:null}findIn(t){const r=p().getByIds(this._storageName(),t);return this._handlerEntities(r)}findLoaded(){const e=p().getByLoaded(this._storageName());return this._handlerEntities(e)}copyToStorage(t){const e=p(),r=e.getById(this._storageName(),this.model.id);e.updateById(t,this.model.id,r)}moveToStorage(t){this.copyToStorage(t),this._storeRemoveById(this.model.id)}update(){this._storeCommit()}create(){return this.model.getId()||this.model.setId(nt()),this._storeCommit(),this.model.getId()}remove(){this._storeRemoveById(this.model.getId())}removeById(t){this._storeRemoveById(t)}_storeRemoveById(t){p().removeById(this._storageName(),t)}_storeCommit(){const t=p(),e=q(this.model.toObject());t.updateById(this._storageName(),this.model.getId(),e)}_getDefaultParams(){return{model:!0,copy:!0,deepCopy:!0,with:[]}}_isFieldRelation(t){return this.model.isFieldRelation(t)}_getRelation(t){return this.model.relations()[t]??null}_storageName(){const t=this.model.storageName();if(!t)throw new Error("Is not founded storage name");return t}_handlerEntities(t){if(!Array.isArray(t))throw Error("Is not correct ids");return t.length?(this._isCopy()&&(t=t.map(e=>this._copyObj(e))),this._isWithRelations()&&(t=t.map(e=>this._completeRelations(e))),this._isModel()&&(t=t.map(e=>this._completeModel(e))),t):[]}_completeRelations(t){if(!t)return null;for(let[e,r]of Object.entries(t))if(this._isFieldRelation(e)&&r){const l=Array.isArray(r)?this._getRelation(e).findIn(r,this.params):this._getRelation(e).find(r,this.params);t[e]=l}return t}_completeModel(t){return this.model.clone().fill(t)}_isWithRelations(){return this.params.hasOwnProperty("with")&&this.params.with.length>0}_isModel(){return this.params.hasOwnProperty("model")&&this.params.model===!0}_isCopy(){return this.params.hasOwnProperty("copy")&&this.params.copy===!0}_isDeepCopy(){return this.params.hasOwnProperty("deepCopy")&&this.params.deepCopy===!0}_copyObj(t){return t&&(this._isDeepCopy()?q(t):{...t})}}function _t(){return typeof window<"u"?window.console:global.console}const m=_t(),V="array",It="object";var T,O;const x=class x{constructor(){o(this,"relationships",{});o(this,"_dependentRelationships",{});o(this,"exists",!1);o(this,"_baseUrl","/api/v1");o(this,"_resourceName",null);d(this,T,[]);o(this,"_storageName",null);o(this,"_includeName",null);o(this,"_primaryKey","id");d(this,O,null)}instance(){return new this.constructor}static make(){return new this}static query(){return new this().query()}static sync(t={}){return new this().sync(t)}static fill(t){return new this().fill(t)}static createLocal(){return new this().createLocal()}static all(t){return new this().all(t)}static find(t,e={}){return new this().find(t,e)}static findIn(t,e={}){return new this().findIn(t,e)}static findLoaded(t={}){return new this().findLoaded(t)}apiResource(){return i(this,O)}urlResource(){return this._baseUrl+"/"+this.resourceName()}resourceName(){return this._resourceName}includeName(){return this._includeName||this.resourceName().replace("-","_")}storageName(){return this._storageName||this.includeName()}relations(){return this._relations}primaryKey(){return this._primaryKey}getId(){return this[this._primaryKey]??null}setId(t){return this[this._primaryKey]=t,this}setResourceName(t){return this._resourceName=t,this}setIncludeName(t){return this._includeName=t,this}setStorageName(t){return this._storageName=t,this}fill(t){return this._creator(t),this}toObject(){return Object.getOwnPropertyNames(this).reduce((e,r)=>(this.isFieldAttribute(r)&&(e[r]=this[r]),e),{})}clone(){return Object.assign(Object.create(Object.getPrototypeOf(this)),this)}query(){return ft.make(this)}async sync(t={}){h(this,O,this.query());const e=await i(this,O).setParams(t).get();return m.log("sync response",e),h(this,T,e.data.data),e.data.data}all(t={}){return u.make(this).setParams(t).all()}find(t,e={}){return u.make(this).setParams(e).find(t)??this.instance()}findIn(t,e={}){return u.make(this).setParams(e).findIn(t)}findLoaded(t={}){return u.make(this).setParams(t).findLoaded()}createLocal(){const t=u.make(this).create();return this._updateDependentRelationships(t),t}updateLocal(){u.make(this).update()}destroyLocal(){u.make(this).remove()}copyToStorage(t){u.make(this).copyToStorage(t)}moveToStorage(t){u.make(this).moveToStorage(t)}save(t={}){return this.exists?this.update(t):this.create(t)}async create(t={}){const e=u.make(this),r=e.create();this._updateDependentRelationships(r);try{const n=await this.query().setParams(t).create();return this._updateDependentRelationships(n.data.data,r),m.log("model create response",n),e.removeById(r),n.data.data}catch(n){m.log("removeById",r),e.removeById(r),m.error("Error: "+n)}}async update(t={}){const e=u.make(this),r=e.find(this.getId());e.update();try{const n=await this.query().setParams(t).update();return m.log("model update response",n),n.data.data}catch(n){u.make(r).update(),m.error("Error: "+n)}return r.getId()}async destroy(){const t=u.make(this),e=t.find(this.getId());t.remove();try{const r=await this.query().destroy();return m.log("model update response",r),this.getId()}catch(r){u.make(e).update(),m.error("Error: "+r)}}isFieldAttribute(t){return this.isPublicField(t)}isPublicField(t){return!t.startsWith("_")&&!t.startsWith("#")}hasOne(t,e){return this.relationships.hasOwnProperty(t)?e.find(this.relationships[t])??null:null}hasMany(t,e){return this.relationships.hasOwnProperty(t)?e.findIn(this.relationships[t])??[]:[]}belongsTo(t,e,r=null,n=null,l=null){if(this.putRelation(t,e),b(r))return;const f=r.find(e);n=n||this.storageName(),this._dependentRelationships[t]={relationEntity:f,localRelationName:n,localStorageName:l}}hasRelation(t){return!!this.getRelation(t)}setRelation(t,e){this._checkAndCreateRelationshipsField(),this.relationships[t]=e}addRelation(t,e){this._checkAndCreateRelationshipsField(),this.relationships.hasOwnProperty(t)||(this.relationships[t]=[]),this.relationships[t].push(e)}getRelation(t){return this.relationships[t]??null}removeRelation(t){delete this.relationships[t],this._checkAndDeleteRelationshipsField()}removeRelationValue(t,e){const r=this.getRelation(t);if(b(r)||st(r))return;const n=r.indexOf(e);delete this.relationships[t][n]}isFieldRelation(t){return(Array.isArray(this._relations)?V:It)===V?this._relations.includes(t):this._relations.hasOwnProperty(t)}isFieldModel(t){return this[t]instanceof x}_convertModelToId(t){return t.getId()}_creator(t){t=t||{};for(let[e,r]of Object.entries(t))this[e]=r}_checkAndCreateRelationshipsField(){this.hasOwnProperty("relationships")||(this.relationships={})}_checkAndDeleteRelationshipsField(){Object.entries(this.relationships).length===0&&delete this.relationships}_updateDependentRelationships(t,e=null){const r=Object.entries(this._dependentRelationships);for(let[n,{relationEntity:l,localRelationName:f}]of r)b(e)?l.putRelation(f,t):e!==0?l.replaceRelation(f,t,e):l.deleteRelation(f,t),l.updateLocal()}deleteRelation(t,e=null){const r=this[t];if(N(r)){if(b(e))throw Error("Delete Relation: no value specified");this.removeRelationValue(t,e)}else this.removeRelation(t)}replaceRelation(t,e,r){const n=this[t];if(N(n)){const l=this.getRelation(t);this.setRelation(t,at(l,r,e))}else this.setRelation(t,e)}putRelation(t,e){const r=this[t];N(r)?this.addRelation(t,e):this.setRelation(t,e)}};T=new WeakMap,O=new WeakMap;let g=x;class F extends g{constructor(){super(...arguments);o(this,"_resourceName","currencies")}get icon(){var e;return((e=rt.find(r=>r.id===this.id))==null?void 0:e.icon)??null}}class z extends g{constructor(){super(...arguments);o(this,"_resourceName","account-sums")}get currency(){return this.hasOne("currency",F)}set currency(e){return this.belongsTo("currency",e)}get account(){this.hasOne("account",k)}set account(e){this.belongsTo("account",e,k,"sums")}}class W extends g{constructor(){super(...arguments);o(this,"_resourceName","account-categories")}get accounts(){return this.hasMany("accounts",k)}get icon(){var e;return((e=it.find(r=>r.id===this.id))==null?void 0:e.icon)??null}getSum(){return this.accounts.reduce((e,r)=>r.getSum()+e,0)}static async loadMainPage(){return await this.query().get("/main-page")}async loadMainPage(){return await this.query().get("/main-page")}}class k extends g{constructor(){super(...arguments);o(this,"_resourceName","accounts")}get sums(){return this.hasMany("sums",z)}set sums(e){this.belongsTo("sums",e)}get category(){return this.hasOne("category",W)}set category(e){this.belongsTo("category",e,W,"accounts")}get currency(){return this.hasOne("currency",F)}set currency(e){this.belongsTo("currency",e)}getSum(){return ht(this.sums,"balance")}}class U extends g{constructor(){super(...arguments);o(this,"_resourceName","transaction-categories")}get children(){return this.hasMany("children",U)}get transactions(){return this.hasMany("transactions",Q)}childrenCount(){return this.children.length}isChildren(){return this.childrenCount()>0}}class Q extends g{constructor(){super(...arguments);o(this,"_resourceName","transactions")}get account(){return this.hasOne("account",k)}get category(){return this.hasOne("category",U)}set currency(e){this.belongsTo("currency",e)}set type(e){this.belongsTo("type",e)}set account(e){this.belongsTo("account",e)}set category(e){this.belongsTo("category",e)}}function Rt(s){return s instanceof z}function Et(s){return s.every(Rt)}function Ot(s){return s instanceof F}function kt(s){return s.every(Ot)}function Mt(s){return s instanceof Q}export{k as A,F as C,Q as T,W as a,ot as b,z as c,bt as d,Ot as e,Mt as f,U as g,kt as h,Rt as i,vt as t,p as u,Et as v};
