import{G as k,_ as j,j as I,n as A,r as _,o as r,c as S,a as y,t as C,k as i,e as V,w as x,H as N,I as O,f as R,x as T,d as b,F as w,z as q}from"./index-C54BZKKw.js";import{b as B,i as $,C as p,d as L,e as P,v as z,A as D}from"./entities-BlY9GNkC.js";import{_ as E,a as M}from"./CurrenciesList-DnoPdRRw.js";const ee=k("accounts/index",{state:()=>({amountTotal:0,accountsPanelModel:[],categoriesIds:[]}),getters:{},actions:{addCategoryId(e){this.categoriesIds.indexOf(e)===-1&&this.categoriesIds.push(e)}}}),G={class:"d-flex align-center s-item"},H={class:"d-flex align-center"},U={class:"mr-2"},J={key:0,class:"align-self-center"},K={__name:"AccountSumItem",props:{accountSum:{type:Object,required:!0,validator:e=>e instanceof B},isAvailableRemove:{type:Boolean,required:!1}},emits:{removeAccountSum:$},setup(e,{emit:c}){const s=e,v=c,a=I(!1),u=A(()=>s.accountSum.balance??0),l=A(()=>p.find(s.accountSum.getRelation("currency")));function f(m){L(s.accountSum,{balance:m})}return(m,t)=>{const h=_("v-btn");return r(),S("div",G,[y("div",H,"Баланс ("+C(l.value.alphabetic_code)+")",1),y("div",{class:"flex-grow-1 d-flex justify-end align-center text-h6",onClick:t[2]||(t[2]=o=>a.value=!0)},[y("span",U,C(u.value),1),y("span",null,C(l.value.symbol),1),i(E,{modelValue:a.value,"onUpdate:modelValue":t[0]||(t[0]=o=>a.value=o),"start-sum":u.value,onDone:t[1]||(t[1]=o=>f(o))},null,8,["modelValue","start-sum"])]),e.isAvailableRemove?(r(),S("div",J,[i(h,{variant:"text",icon:"mdi-close",onClick:t[3]||(t[3]=o=>v("removeAccountSum",e.accountSum))})])):V("",!0)])}}},Q=j(K,[["__scopeId","data-v-2df19aa5"]]),W={__name:"TheAddAccountSum",emits:{selectedCurrency:P},setup(e,{emit:c}){const s=c,v=A(()=>p.all());return(a,u)=>{const l=_("v-divider"),f=_("v-btn"),m=_("v-menu");return r(),S("div",null,[i(l,{class:"mb-3"}),i(m,null,{activator:x(({props:t})=>[i(f,N(O(t)),{default:x(()=>[R(" Додати валюту ")]),_:2},1040)]),default:x(()=>[i(M,{currencies:v.value,onSelected:u[0]||(u[0]=t=>s("selectedCurrency",t))},null,8,["currencies"])]),_:1})])}}},te={__name:"TheAccountSums",props:{accountSums:{type:Array,required:!0,validator:z},isCreateFirst:{type:Boolean,default:!1}},emits:{createdAccountSum:$},setup(e,{emit:c}){const s=e,v=c,a=I(!1),u=A(()=>p.findLoaded());T(()=>{l()});async function l(){u.value.length!==3&&await m(),s.isCreateFirst&&f()}function f(){const n=p.all();o(n[0])}async function m(){a.value=!0;try{await p.sync()}finally{a.value=!1}}function t(n){h(n)||o(n)}function h(n){return s.accountSums.some(d=>d.currency.id===n.id)}function o(n){const d=new B;d.balance=0,d.currency=n.id,v("createdAccountSum",d)}return(n,d)=>{const F=_("v-progress-linear");return r(),S(w,null,[a.value?(r(),b(F,{key:0,indeterminate:""})):V("",!0),(r(!0),S(w,null,q(e.accountSums,g=>(r(),b(Q,{key:g.id,"account-sum":g},null,8,["account-sum"]))),128)),i(W,{onSelectedCurrency:t})],64)}}},ce=k("accounts/create",{state:()=>({account:null,sums:[]}),getters:{},actions:{createAccount(e){const c=new D;c.category=e,this.account=c},reset(){this.resetAccount(),this.resetAccountSum(),console.info("account and account sums were reset")},resetAccount(){this.account=null},resetAccountSum(){this.sums=[]},createAccountSum(e){this.sums.push(e)},deleteAccountSum(e){this.sums.splice(this.sums.indexOf(e),1)},async saveAccount(){this.account.currency=this.sums[0].currency.id;const e=await this.account.save({include:"sums,category"});await this.saveAccountSums(e)},async saveAccountSums(e){if(e)for(const c of this.sums)c.account=e,await c.save({include:"currency"})}}});export{te as _,ce as a,ee as u};
